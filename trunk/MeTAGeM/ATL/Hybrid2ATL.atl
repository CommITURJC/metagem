module Hybrid2ATL; -- Module Template
create OUT : ATL from IN : MM_Hybrid;

rule Module {
	from 
		mm_hybrid : MM_Hybrid!Module
	to
		atl : ATL!Module (
			isRefining <- false,
			name <- mm_hybrid.name_module.debug('Modulo'),
		    inModels <- mm_hybrid.inMM,
			outModels <- mm_hybrid.outMM,
			elements <- mm_hybrid."rule",
			commentsBefore <- Set {'-- @atlcompiler atl2006'}
		)
}
  
rule inMM{
	from
		inMM_hybrid : MM_Hybrid!InMetaModel
	to
		inMM_ATL : ATL!OclModel(
			name <- inMM_hybrid.name_mm.debug('InputMM'),
			metamodel <- ametamodel
		),
		ametamodel : ATL!OclModel (
			name <- inMM_hybrid.type_mm
		)
}

rule outMM{
	from
		outMM_hybrid : MM_Hybrid!OutMetaModel
	to
		outMM_ATL : ATL!OclModel(
			name <- outMM_hybrid.name_mm.debug('OutputMM'),
			metamodel <- ametamodel
		),
		ametamodel : ATL!OclModel (
			name <- outMM_hybrid.type_mm
		)
}

rule createRule2MatchedRule{
	from 
		mm_hybrid_rule : MM_Hybrid!Rule (mm_hybrid_rule.isMain=true)
	to
		atl : ATL!MatchedRule (
			name <- mm_hybrid_rule.name_rule,
			isAbstract <- mm_hybrid_rule.isAbstract,
			isRefining <- false,
			isDefault <- false,
			inPattern <- mm_hybrid_rule."in".asSequence().first(),
			outPattern <- outPattern
		),
--		inPattern : ATL!InPattern(
--			elements <- mm_hybrid_rule."in".asSequence()--.first()
--			),
		outPattern : ATL!OutPattern(
			elements <- mm_hybrid_rule.out.asSequence()	
		)
}
  
rule InPatternElement {
	from 
		inPattern : MM_Hybrid!SourceElementRule  	
	to
		atl : ATL!InPattern (
			elements <- element 
		),
		element : ATL!SimpleInPatternElement (
			varName <- inPattern.name_element,
			type <- aType
		),
		aType : ATL!OclModelElement(
			name <- inPattern.name_element,
			--model <- thisModule.resolveTemp(MM_Hybrid!InMetaModel.allInstances()->select(e|true)->first(),'ametamodel')
			model <- inPattern.metamodel
		),
		atl_element:ATL!OclModelElement(
			name <- inPattern.name_element	
		)
}

rule OutPatternElement { 
	from
		outPattern : MM_Hybrid!TargetElementRule
	to
		atl : ATL!SimpleOutPatternElement (
			varName <- outPattern.name_element,
			type <- aType
--			bindings <- 
		),
		aType : ATL!OclModelElement(
			name <- outPattern.name_element,
			--model <- thisModule.resolveTemp(MM_Hybrid!OutMetaModel,'ametamodel')
			model <- outPattern.metamodel
		),
		atl_element:ATL!OclModelElement(
			name <- outPattern.name_element	
		)
}

