
package mm_hybrid { 

	enumeration TypeAtribute{
	 	literal copy; --es solo una copia textual del atribute
		literal concatenation ; --concatenación de mas de un atributo -- necesariamente tengo que usar una Nto1
		--attribute function : String
	} 
	class Module{
		attribute name_module: String;
		
		reference rule [1-*] container : Rule;
	
		reference inMM[1-*] container : InMetaModel;
	
		
		reference outMM [1-*] container : OutMetaModel;
		
	
	}
	class InMetaModel {
		attribute name_mm : String;
	}
	
		class OutMetaModel {
		attribute name_mm : String;
	}
		
	class Rule{
		attribute name_rule: String;
		attribute isAbstract: Boolean;
		attribute isMain:Boolean; --para ver si es called o no
		reference in container : SourceElementRule;
		reference out [1-*]container : TargetElementRule;
	}	
		
	abstract class Element{
		attribute name_element: String;
	}
	 
	
	class SourceElementRule extends Element{
		reference condition container: Condition;
	}

	
	class TargetElementRule extends Element{
	}
	
	class ElementIncluded{
	
		reference sourceElement [1-*] container: Element; --tengo que controlar lo del tipo
		reference targetElement [1-*] container: Element;
	}
	class Condition{
	}
}

package PrimitiveTypes {
	datatype Boolean;
	datatype Integer;
	datatype String;
}

