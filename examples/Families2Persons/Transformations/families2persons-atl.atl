-- @atlcompiler atl2006
module families2persons;
create persons_model : persons from families_model : families;

-- Comments -> This is a MatchedRule: father2male -> 
rule father2male {
  from
    father_in : families!Father
  to
    male_out : persons!Male (
      fullName <- father_in.getFatherName()
    )
}

-- Comments -> This is a MatchedRule: mother2female -> 
rule mother2female {
  from
    mother_in : families!Mother
  to
    female_out : persons!Female (
      fullName <- mother_in.firstName + mother_in.familyMother.lastName
    )
}

-- Comments -> This is a MatchedRule: son2male -> 
rule son2male {
  from
    son_in : families!Son
  to
    male_out : persons!Male (
      fullName <- son_in.firstName + son_in.familySon.lastName
    )
}

-- Comments -> This is a MatchedRule: daughter2female -> 
rule daughter2female {
  from
    daughter_in : families!Daughter
  to
    female_out : persons!Female (
      fullName <- daughter_in.firstName + daughter_in.familyDaughter.lastName
    )
}

-- Comments -> This is a Helper: getFatherName()
helper context families!Father def: getFatherName() : String =
  	self.firstName + ' ' + self.familyFather.lastName
;

